// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.arithmeticprotobuf.domain;

/**
 * Protobuf type {@code tutorial.OperationData}
 */
public  final class OperationData extends
    com.google.protobuf.GeneratedMessage
    implements OperationDataOrBuilder {
  // Use OperationData.newBuilder() to construct.
  private OperationData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private OperationData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final OperationData defaultInstance;
  public static OperationData getDefaultInstance() {
    return defaultInstance;
  }

  public OperationData getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private OperationData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 9: {
            bitField0_ |= 0x00000001;
            operatorOne_ = input.readDouble();
            break;
          }
          case 17: {
            bitField0_ |= 0x00000002;
            operatorTwo_ = input.readDouble();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            com.arithmeticprotobuf.domain.OperationData.Operation value = com.arithmeticprotobuf.domain.OperationData.Operation.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(3, rawValue);
            } else {
              bitField0_ |= 0x00000004;
              operation_ = value;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.arithmeticprotobuf.domain.Message.internal_static_tutorial_OperationData_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.arithmeticprotobuf.domain.Message.internal_static_tutorial_OperationData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.arithmeticprotobuf.domain.OperationData.class, com.arithmeticprotobuf.domain.OperationData.Builder.class);
  }

  public static com.google.protobuf.Parser<OperationData> PARSER =
      new com.google.protobuf.AbstractParser<OperationData>() {
    public OperationData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OperationData(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<OperationData> getParserForType() {
    return PARSER;
  }

  /**
   * Protobuf enum {@code tutorial.OperationData.Operation}
   */
  public enum Operation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>sum = 0;</code>
     */
    sum(0, 0),
    /**
     * <code>subtract = 1;</code>
     */
    subtract(1, 1),
    ;

    /**
     * <code>sum = 0;</code>
     */
    public static final int sum_VALUE = 0;
    /**
     * <code>subtract = 1;</code>
     */
    public static final int subtract_VALUE = 1;


    public final int getNumber() { return value; }

    public static Operation valueOf(int value) {
      switch (value) {
        case 0: return sum;
        case 1: return subtract;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Operation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Operation>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
            public Operation findValueByNumber(int number) {
              return Operation.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.arithmeticprotobuf.domain.OperationData.getDescriptor().getEnumTypes().get(0);
    }

    private static final Operation[] VALUES = values();

    public static Operation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Operation(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tutorial.OperationData.Operation)
  }

  private int bitField0_;
  // required double operatorOne = 1;
  public static final int OPERATORONE_FIELD_NUMBER = 1;
  private double operatorOne_;
  /**
   * <code>required double operatorOne = 1;</code>
   */
  public boolean hasOperatorOne() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required double operatorOne = 1;</code>
   */
  public double getOperatorOne() {
    return operatorOne_;
  }

  // required double operatorTwo = 2;
  public static final int OPERATORTWO_FIELD_NUMBER = 2;
  private double operatorTwo_;
  /**
   * <code>required double operatorTwo = 2;</code>
   */
  public boolean hasOperatorTwo() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required double operatorTwo = 2;</code>
   */
  public double getOperatorTwo() {
    return operatorTwo_;
  }

  // required .tutorial.OperationData.Operation operation = 3;
  public static final int OPERATION_FIELD_NUMBER = 3;
  private com.arithmeticprotobuf.domain.OperationData.Operation operation_;
  /**
   * <code>required .tutorial.OperationData.Operation operation = 3;</code>
   */
  public boolean hasOperation() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required .tutorial.OperationData.Operation operation = 3;</code>
   */
  public com.arithmeticprotobuf.domain.OperationData.Operation getOperation() {
    return operation_;
  }

  private void initFields() {
    operatorOne_ = 0D;
    operatorTwo_ = 0D;
    operation_ = com.arithmeticprotobuf.domain.OperationData.Operation.sum;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized != -1) return isInitialized == 1;

    if (!hasOperatorOne()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasOperatorTwo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasOperation()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeDouble(1, operatorOne_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeDouble(2, operatorTwo_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeEnum(3, operation_.getNumber());
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, operatorOne_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, operatorTwo_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, operation_.getNumber());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.arithmeticprotobuf.domain.OperationData)) {
      return super.equals(obj);
    }
    com.arithmeticprotobuf.domain.OperationData other = (com.arithmeticprotobuf.domain.OperationData) obj;

    boolean result = true;
    result = result && (hasOperatorOne() == other.hasOperatorOne());
    if (hasOperatorOne()) {
      result = result && (Double.doubleToLongBits(getOperatorOne())    == Double.doubleToLongBits(other.getOperatorOne()));
    }
    result = result && (hasOperatorTwo() == other.hasOperatorTwo());
    if (hasOperatorTwo()) {
      result = result && (Double.doubleToLongBits(getOperatorTwo())    == Double.doubleToLongBits(other.getOperatorTwo()));
    }
    result = result && (hasOperation() == other.hasOperation());
    if (hasOperation()) {
      result = result &&
          (getOperation() == other.getOperation());
    }
    result = result &&
        getUnknownFields().equals(other.getUnknownFields());
    return result;
  }

  private int memoizedHashCode = 0;
  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasOperatorOne()) {
      hash = (37 * hash) + OPERATORONE_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(
          Double.doubleToLongBits(getOperatorOne()));
    }
    if (hasOperatorTwo()) {
      hash = (37 * hash) + OPERATORTWO_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(
          Double.doubleToLongBits(getOperatorTwo()));
    }
    if (hasOperation()) {
      hash = (37 * hash) + OPERATION_FIELD_NUMBER;
      hash = (53 * hash) + hashEnum(getOperation());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.arithmeticprotobuf.domain.OperationData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.arithmeticprotobuf.domain.OperationData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(com.arithmeticprotobuf.domain.OperationData prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tutorial.OperationData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder>
     implements com.arithmeticprotobuf.domain.OperationDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.arithmeticprotobuf.domain.Message.internal_static_tutorial_OperationData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.arithmeticprotobuf.domain.Message.internal_static_tutorial_OperationData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.arithmeticprotobuf.domain.OperationData.class, com.arithmeticprotobuf.domain.OperationData.Builder.class);
    }

    // Construct using com.arithmeticprotobuf.domain.OperationData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      operatorOne_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000001);
      operatorTwo_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000002);
      operation_ = com.arithmeticprotobuf.domain.OperationData.Operation.sum;
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.arithmeticprotobuf.domain.Message.internal_static_tutorial_OperationData_descriptor;
    }

    public com.arithmeticprotobuf.domain.OperationData getDefaultInstanceForType() {
      return com.arithmeticprotobuf.domain.OperationData.getDefaultInstance();
    }

    public com.arithmeticprotobuf.domain.OperationData build() {
      com.arithmeticprotobuf.domain.OperationData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.arithmeticprotobuf.domain.OperationData buildPartial() {
      com.arithmeticprotobuf.domain.OperationData result = new com.arithmeticprotobuf.domain.OperationData(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.operatorOne_ = operatorOne_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.operatorTwo_ = operatorTwo_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.operation_ = operation_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.arithmeticprotobuf.domain.OperationData) {
        return mergeFrom((com.arithmeticprotobuf.domain.OperationData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.arithmeticprotobuf.domain.OperationData other) {
      if (other == com.arithmeticprotobuf.domain.OperationData.getDefaultInstance()) return this;
      if (other.hasOperatorOne()) {
        setOperatorOne(other.getOperatorOne());
      }
      if (other.hasOperatorTwo()) {
        setOperatorTwo(other.getOperatorTwo());
      }
      if (other.hasOperation()) {
        setOperation(other.getOperation());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasOperatorOne()) {
        
        return false;
      }
      if (!hasOperatorTwo()) {
        
        return false;
      }
      if (!hasOperation()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.arithmeticprotobuf.domain.OperationData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.arithmeticprotobuf.domain.OperationData) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    // required double operatorOne = 1;
    private double operatorOne_ ;
    /**
     * <code>required double operatorOne = 1;</code>
     */
    public boolean hasOperatorOne() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double operatorOne = 1;</code>
     */
    public double getOperatorOne() {
      return operatorOne_;
    }
    /**
     * <code>required double operatorOne = 1;</code>
     */
    public Builder setOperatorOne(double value) {
      bitField0_ |= 0x00000001;
      operatorOne_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double operatorOne = 1;</code>
     */
    public Builder clearOperatorOne() {
      bitField0_ = (bitField0_ & ~0x00000001);
      operatorOne_ = 0D;
      onChanged();
      return this;
    }

    // required double operatorTwo = 2;
    private double operatorTwo_ ;
    /**
     * <code>required double operatorTwo = 2;</code>
     */
    public boolean hasOperatorTwo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double operatorTwo = 2;</code>
     */
    public double getOperatorTwo() {
      return operatorTwo_;
    }
    /**
     * <code>required double operatorTwo = 2;</code>
     */
    public Builder setOperatorTwo(double value) {
      bitField0_ |= 0x00000002;
      operatorTwo_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double operatorTwo = 2;</code>
     */
    public Builder clearOperatorTwo() {
      bitField0_ = (bitField0_ & ~0x00000002);
      operatorTwo_ = 0D;
      onChanged();
      return this;
    }

    // required .tutorial.OperationData.Operation operation = 3;
    private com.arithmeticprotobuf.domain.OperationData.Operation operation_ = com.arithmeticprotobuf.domain.OperationData.Operation.sum;
    /**
     * <code>required .tutorial.OperationData.Operation operation = 3;</code>
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .tutorial.OperationData.Operation operation = 3;</code>
     */
    public com.arithmeticprotobuf.domain.OperationData.Operation getOperation() {
      return operation_;
    }
    /**
     * <code>required .tutorial.OperationData.Operation operation = 3;</code>
     */
    public Builder setOperation(com.arithmeticprotobuf.domain.OperationData.Operation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      operation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .tutorial.OperationData.Operation operation = 3;</code>
     */
    public Builder clearOperation() {
      bitField0_ = (bitField0_ & ~0x00000004);
      operation_ = com.arithmeticprotobuf.domain.OperationData.Operation.sum;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:tutorial.OperationData)
  }

  static {
    defaultInstance = new OperationData(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:tutorial.OperationData)
}

